// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package frontegg

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "frontegg:index/allowedOrigin:AllowedOrigin":
		r = &AllowedOrigin{}
	case "frontegg:index/permission:Permission":
		r = &Permission{}
	case "frontegg:index/permissionCategory:PermissionCategory":
		r = &PermissionCategory{}
	case "frontegg:index/redirectUri:RedirectUri":
		r = &RedirectUri{}
	case "frontegg:index/role:Role":
		r = &Role{}
	case "frontegg:index/tenant:Tenant":
		r = &Tenant{}
	case "frontegg:index/webhook:Webhook":
		r = &Webhook{}
	case "frontegg:index/workspace:Workspace":
		r = &Workspace{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:frontegg" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"frontegg",
		"index/allowedOrigin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"frontegg",
		"index/permission",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"frontegg",
		"index/permissionCategory",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"frontegg",
		"index/redirectUri",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"frontegg",
		"index/role",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"frontegg",
		"index/tenant",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"frontegg",
		"index/webhook",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"frontegg",
		"index/workspace",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"frontegg",
		&pkg{version},
	)
}
